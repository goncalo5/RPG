#:import Animation kivy.animation.Animation
#:import settings settings

<BoxVertical@BoxLayout>:
    orientation: "vertical"
    padding: 10

<BoxHorizontal@BoxLayout>:
    orientation: "horizontal"
    padding: 10

<LateralBar@BoxHorizontal>:
    id: lateral
    size_hint_x: None
    width: 400
    right: button.width
    BoxLayout:
        orientation: "vertical"
        Button:
            text: 'Explore'
            background_color: 1, 1, 1, 0.7
        Button:
            text: 'Smith'
            background_color: 1, 1, 1, 0.7
        Button:
            text: 'Tavern'
            background_color: 1, 1, 1, 0.7
        Button:
            text: 'Market'
            background_color: 1, 1, 1, 0.7
    Button:
        id: button
        background_color: 1, 1, 1, 0.7
        text: "->"
        size_hint_x: None
        # size: self.texture_size
        width: 50
        on_press:
            dx = 300 if self.text == "->" else -300
            # lateral.x += dx
            anim = Animation(x=lateral.x + dx, t='in_quad', duration=0.2)
            anim.start(lateral)
            self.text = "<-" if self.text == "->" else "->"

<ActionBar>:
    pos_hint: {'top':1}
    ActionView:
        use_separator: True
        ActionPrevious:
            title: 'Village'
            # app_icon: "bunny1_hurt.png"
            with_previous: False
        ActionButton:
            text: 'Items'
        ActionButton:
            text: 'Monsters'
        ActionButton:
            text: 'Travel'
        ActionButton:
            text: 'options'
        ActionButton:
            text: 'profile'
        ActionButton:
            text: 'Exit'

<PlayerMenu@BoxVertical>:
    BoxVertical:
        BoxHorizontal:
            Label:
                text: "%s" % app.player.name
            BoxVertical:
                Label:
                    text: "gold:"
                Label:
                    text: "%s" % app.player.gold
            BoxVertical:
                Label:
                    text: "level:"
                Label:
                    text: "%s" % app.player.level
            BoxVertical:
                Label:
                    text: "xp:"
                Label:
                    text: "%s" % app.player.xp
        BoxVertical:
            Label:
                text: "hp:"
            Label:
                text: "%s" % app.player.hp
        BoxVertical:
            Label:
                text: "atk:"
            Label:
                text: "%s" % app.player.atk
        BoxVertical:
            Label:
                text: "speed:"
            Label:
                text: "%s" % app.player.speed
        BoxVertical:
            Label:
                text: "carried:"
            Label:
                text: "%s kg" % app.player.carried
        BoxHorizontal:
            BoxVertical:
                Label:
                    text: "off hand"
                Spinner:
                    selected: False
                    text: app.player.equiped["off_hand"]
                    values: app.player.items_availables_names
                    on_text:
                        app.player.change_equipment(self, self.text, "off_hand")
            BoxVertical:
                Label:
                    text: "armor"
                Spinner:
                    selected: False
                    text: app.player.equiped["armor"]
                    values: app.player.items_availables_names
                    on_text:
                        app.player.change_equipment(self, self.text, "armor")
            BoxVertical:
                Label:
                    text: "main hand"
                Spinner:
                    selected: False
                    text: app.player.equiped["main_hand"]
                    values: app.player.items_availables_names
                    on_text:
                        print(55)
                        app.player.change_equipment(self, self.text, "main_hand")

<OverView>:
    BoxVertical:
        ActionBar:
            id: action_bar
        PlayerMenu
    LateralBar:
        id: lateral
        # BoxVertical:
        #     Label:
        #         text: root.place_name
        #         size_hint_y: None
        #         height: 50
        #     TabbedPanel:
        #         do_default_tab: False
        #         # tab_width: self.width / 2
        #         TabbedPanelItem:
        #             text: "explore"
        #         TabbedPanelItem:
        #             text: "smith"
        #         TabbedPanelItem:
        #             text: "tavern"
        #         TabbedPanelItem:
        #             text: "market"
        #     GridLayout:
        #         cols: 2
        #         Spinner:
        #             text: "items"
        #             values: app.player.items_names
        #             on_text:
        #                 self.text = "items"
        #         Button:
        #             text: "Monsters"
        #         Button:
        #             text: "Travel"
        #         Button:
        #             text: "options"
        #         Button:
        #             text: "profile"
        #         Button:
        #             text: "exit"
    

<InitScreen@Screen>:
    BoxVertical:
        Label:
            text: "Init"
        BoxHorizontal:
            Label:
                text: "Your name:"
            TextInput:
                id: player_name
                multiline: False
        BoxHorizontal:
            Label:
                text: "Place:"
            Spinner:
                text: app.player.place.name
                values: settings.PLACES.keys()
                on_text:
                    print("The spinner {} has text {}".format(self, self.text))
                    app.player.change_place(self.text)
                    print(app.player.place)
        BoxHorizontal:
            Label:
                text: "Item:"
            Spinner:
                id: item_to_add
                # text: settings.INIT.get("items_chose")[0]
                values: settings.INIT.get("items_chose")
                on_text:
                    print("The spinner {} has text {}".format(self, self.text))
                    print(app.player.items)
                    app.player.calc_gold_left(self.text)
            BoxVertical:
                Label:
                    text: "cost: %s" % (getattr(app, item_to_add.text).cost if item_to_add.text else 0)
                Label:
                    text: "weight: %s" % (getattr(app, item_to_add.text).weight if item_to_add.text else 0)
                Label:
                    text: "damage: %s" % (getattr(app, item_to_add.text).damage if item_to_add.text else 0)
                Label:
                    text: "damage_type: %s" % (getattr(app, item_to_add.text).damage_type if item_to_add.text else 0)
        BoxHorizontal:
            Label:
                text: "Gold: %s" % app.player.gold
            Button:
                text: "Next"
                on_press:
                    # root.manager.current = getattr(app, app.player.place).screen
                    app.player.name = player_name.text
                    app.player.add_one_item(item_to_add.text)
                    print(app.player.place.name)
                    root.manager.current = "over_view"


<Manager>:
    id: manager
    over_view: over_view
    InitScreen:
        name: "init_screen"
        manager: manager
    OverView:
        id: over_view
        name: "over_view"
        manager: manager